{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","catg","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE3B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACG,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMjB,SACG,uBACGO,KAAK,OACLC,MAAQT,EACRU,SAlBe,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,QAkBjBG,YAAY,4B,+BC3BXC,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DACdC,EADc,iDACmCC,UAAWH,GAD9C,+DAGDI,MAAOF,GAHN,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVpB,kBAabM,GAba,4CAAH,sDCYLO,EAVK,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAE5B,OACG,sBAAKc,UAAU,OAAf,UACG,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,GAAgB,aCHjBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEvB,ECHyB,SAAEA,GAE3B,MAA0Bf,mBAAS,CAChCsB,KAAM,GACNa,SAAS,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAcA,OATAC,qBAAW,WACRxB,EAASC,GACLwB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CAClBf,KAAMkB,EACNL,SAAS,SAGlB,CAAEpB,IAEEqB,EDb0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACG,qCACG,oBAAIJ,UAAU,kDAAd,SAAkEhB,IAEhEoB,GAAW,4CAEb,qBAAKJ,UAAU,uDAAf,SACEH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEYbgB,EAzBM,WAElB,MAAoC1C,mBAAU,CAAC,KAA/C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAMA,OACG,qCACG,oBAAIgC,UAAU,SAAd,qBACA,cAAC,EAAD,CAAahC,cAAgBA,IAC7B,6BACK4C,EAAWnB,KAAI,SAAAoB,GAAI,OACf,cAAC,EAAD,CACG7B,SAAW6B,GACLA,Y,MCd3BC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.915e7d7d.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategory = ({ setCategories }) => {\n\n   const [inputValue, setInputValue] = useState('');\n\n   const handleInpChange = (e) => {\n      setInputValue(e.target.value);\n   }\n\n   const handleSubmit = (e) => {\n      e.preventDefault();\n      if(inputValue.trim().length > 2){\n         setCategories(cats => [inputValue, ...cats]);\n         setInputValue('');\n      }\n\n   }  \n\n   return (\n      <form onSubmit={ handleSubmit }>\n         <input \n            type=\"text\" \n            value={ inputValue }\n            onChange={ handleInpChange }\n            placeholder=\"Ingrese la categoria\"\n         />\n      </form>\n   )\n}\n\nAddCategory.propTypes = {\n   setCategories: PropTypes.func.isRequired\n}\n","export const getGifs = async ( category ) => {\n   const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=nuOhx2V0BR0IU9iyo8u3PsKRKAICXbwF`;\n\n   const resp = await fetch( url );\n   const { data } = await resp.json();\n\n   const gifs = data.map(img => {\n      return{\n         id: img.id,\n         title: img.title,\n         url: img.images?.downsized_medium.url\n      }\n   })\n   return gifs;\n}","import React from 'react'\n\nconst GifGridItem = ( { title, url } ) => {\n\n   return (\n      <div className=\"card\">\n         <img src={ url } alt={ title }/>\n         <p>{ title ? title : '????' }</p>\n      </div>\n   )\n}\n\nexport default GifGridItem\n","import React from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport GifGridItem from './GifGridItem'\n\nexport const GifGrid = ({ category }) => {\n\n   const { data:images, loading } = useFetchGifs( category );\n\n   return (\n      <>\n         <h3 className=\"category animate__animated animate__fadeInRight\">{ category }</h3>\n\n         { loading && <p>Cargando...</p> }\n         \n         <div className=\"card-container animate__animated animate__fadeInLeft\">\n         { images.map( img  => (\n               <GifGridItem \n                  key={ img.id }\n                  { ...img }   \n               />\n            ))\n         }\n         </div>\n      </>\n   )\n}\n","import { useEffect, useState } from 'react'\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = ( category) => {\n   \n   const [state, setState] = useState({\n      data: [],\n      loading: true\n   })\n\n   useEffect( () => {\n      getGifs( category )\n         .then( imgs => setState({\n               data: imgs,\n               loading: false\n            }) \n         )\n   }, [ category ]);\n\n   return state;\n\n}\n","import React, { useState } from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n   \n   const [categories, setCategories] = useState( [''] );\n   \n   /* const handleAdd = () => {\n      setCategories( [...categories, 'El chavo'] ); \n   } */\n\n   return (\n      <>\n         <h2 className=\"titulo\">Gif App</h2>\n         <AddCategory setCategories={ setCategories } />\n         <ul>\n            { categories.map(catg => \n                  <GifGrid \n                     category={ catg }\n                     key={ catg }\n                  />\n               )\n            }\n         </ul>\n      </>\n   );\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}